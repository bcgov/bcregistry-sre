name: UI CD

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      tagname:
        type: string
    secrets:
      APP_NAME:
        required: true
      OP_CONNECT_URL:
        required: true
      OP_CONNECT_TOKEN:
        required: true

defaults:
  run:
    shell: bash

jobs:
  ui-cd-worklfow:
    runs-on: ubuntu-20.04

    container:
      image: 1password/op:2
      options: --user root

    # Allow add the tag in the repo.
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'write'
      id-token: 'write'

    steps:
      - name: Set target deployment environment
        run: |
          echo "ENVIRONMENT=$(
            if [[ ${{ github.event_name == 'push' }} ]]; then
              echo dev
            else
              if [[ ${{ !inputs.environment }} ]]; then
                echo dev
              else
                echo ${{ inputs.environment }}
              fi
            fi
            )" >> $GITHUB_ENV

      - name: echo Environment
        run: |
          echo ${{ env.ENVIRONMENT }}

      - name: Get git tag preix
        if: inputs.tagname == null
        id: tagprefix
        run: |
          echo "TAG_PREFIX=$(
            if [[ ${{ env.ENVIRONMENT == 'test' }} ]]; then
              echo dev
            elif [[ ${{ env.ENVIRONMENT == 'sandbox' }} ]]; then
              echo test
            elif [[ ${{ env.ENVIRONMENT == 'prod' }} ]]; then
              echo test
            else
              echo dev
            fi
            )" >> $GITHUB_OUTPUT

      - name: echo tag prfix
        run: |
          echo ${{ steps.tagprefix.outputs.TAG_PREFIX }}

      - name: Get lastest git tag by tag preix
        uses: oprypin/find-latest-tag@v1
        if: inputs.tagname == null
        id: latesttag
        with:
          repository: ${{ github.repository_owner }}/${{ github.event.repository.name }}
          releases-only: false
          prefix: ${{ steps.tagprefix.outputs.TAG_PREFIX }}

      - name: echo tag
        run: |
          echo ${{ steps.latesttag.outputs.tag }}


      - name: Determine the tag/ref for checkout
        id: checkoutref
        run: |
          echo "CHECKOUT_REF=$(
            if [[ ${{ github.event_name == 'push' }} ]]; then
              echo ''
            else
              if [[ ${{ !inputs.tagname }} ]]; then
                echo ${{ steps.latesttag.outputs.tag }}
              else
                echo ${{ inputs.tagname }}
              fi
            fi
            )" >> $GITHUB_OUTPUT

      - name: echo checkout tag name
        run: |
          echo ${{ steps.checkoutref.outputs.CHECKOUT_REF }}

      - name: Checkout out the code
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.checkoutref.outputs.CHECKOUT_REF }}

      # Get environment variables from 1password
      - name: Setup .env file

        env:
          OP_CONNECT_HOST: ${{ secrets.OP_CONNECT_URL }}
          OP_CONNECT_TOKEN: ${{ secrets.OP_CONNECT_TOKEN }}
          APP_ENV: ${{ env.ENVIRONMENT }}
        run: |
          op --version
          cat ./devops/vaults.env

          op inject -i ./devops/vaults.env -o .env -f

          NODE_VERSION=$(op read -n op://CD/app-version/NODE_VERSION)
          echo "::add-mask::$NODE_VERSION"
          echo NODE_VERSION=$NODE_VERSION >> $GITHUB_ENV

          FIREBASE_HOST_NAME=$(op read -n op://CD/${{ env.ENVIRONMENT }}/bcregistry/FIREBASE_HOST_NAME)
          echo "::add-mask::$FIREBASE_HOST_NAME"
          echo FIREBASE_HOST_NAME=$FIREBASE_HOST_NAME >> $GITHUB_ENV

          WORKLOAD_IDENTIFY_POOLS_PROVIDER=$(op read -n op://CD/${{ env.ENVIRONMENT }}/bcregistry/WORKLOAD_IDENTIFY_POOLS_PROVIDER)
          echo "::add-mask::$WORKLOAD_IDENTIFY_POOLS_PROVIDER"
          echo WORKLOAD_IDENTIFY_POOLS_PROVIDER=$WORKLOAD_IDENTIFY_POOLS_PROVIDER >> $GITHUB_ENV

          GCP_SERVICE_ACCOUNT=$(op read -n op://CD/${{ env.ENVIRONMENT }}/bcregistry/GCP_SERVICE_ACCOUNT)
          echo "::add-mask::$GCP_SERVICE_ACCOUNT"
          echo GCP_SERVICE_ACCOUNT=$GCP_SERVICE_ACCOUNT >> $GITHUB_ENV

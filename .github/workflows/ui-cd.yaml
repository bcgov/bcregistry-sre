name: UI CD

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      tagname:
        type: string
    secrets:
      APP_NAME:
        required: true
      OP_CONNECT_URL:
        required: true
      OP_CONNECT_TOKEN:
        required: true

defaults:
  run:
    shell: bash

jobs:
  ui-cd-worklfow:
    if: github.ref_protected == true

    runs-on: ubuntu-20.04

    container:
      image: 1password/op:2
      options: --user root

    # Allow add the tag in the repo.
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'write'
      id-token: 'write'

    steps:
      - name: Set target deployment environment
        run: |
          echo "ENVIRONMENT=$(
            if [ '${{ github.event_name }}' == 'push' ]; then
              echo dev
            else
              if [ '${{ inputs.environment }}' == '' ]; then
                echo dev
              else
                echo ${{ inputs.environment }}
              fi
            fi
            )" >> $GITHUB_ENV

      - name: Get git tag preix
        if: inputs.tagname == null
        id: tagprefix
        run: |
          echo "TAG_PREFIX=$(
            if [ '${{ env.ENVIRONMENT }}' == 'test' ]; then
              echo dev
            elif [ '${{ env.ENVIRONMENT }}' == 'sandbox' ]; then
              echo test
            elif [ '${{ env.ENVIRONMENT }}' == 'prod' ]; then
              echo test
            else
              echo dev
            fi
            )" >> $GITHUB_OUTPUT

      - name: Get lastest git tag by tag preix
        uses: oprypin/find-latest-tag@v1
        if: inputs.tagname == null
        id: latesttag
        with:
          repository: ${{ github.repository_owner }}/${{ github.event.repository.name }}
          releases-only: false
          prefix: ${{ steps.tagprefix.outputs.TAG_PREFIX }}

      - name: Determine the tag/ref for checkout
        id: checkoutref
        run: |
          echo "CHECKOUT_REF=$(
            if [ '${{ github.event_name }}' == 'push' ]; then
              echo ''
            else
              if [ '${{ inputs.tagname }}' == '' ]; then
                if [ '${{ env.ENVIRONMENT }}' == 'dev' ]; then
                  echo ''
                else
                  echo ${{ steps.latesttag.outputs.tag }}
                fi
              else
                echo ${{ inputs.tagname }}
              fi
            fi
            )" >> $GITHUB_OUTPUT

      - name: Checkout out the code
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.checkoutref.outputs.CHECKOUT_REF }}

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      # Get last commit sha
      - name: Prepare
        uses: pwei1018/bcregistry-sre/.github/actions/cd-prepare.yml

      # Get environment variables from 1password
      - name: Setup .env file

        env:
          OP_CONNECT_HOST: ${{ secrets.OP_CONNECT_URL }}
          OP_CONNECT_TOKEN: ${{ secrets.OP_CONNECT_TOKEN }}
          APP_ENV: ${{ env.ENVIRONMENT }}
        run: |
          op inject -i ./devops/vaults.env -o .env -f

          NODE_VERSION=$(op read -n op://CD/app-version/NODE_VERSION)
          echo "::add-mask::$NODE_VERSION"
          echo NODE_VERSION=$NODE_VERSION >> $GITHUB_ENV

          FIREBASE_HOST_NAME=$(op read -n op://CD/${{ env.ENVIRONMENT }}/bcregistry/FIREBASE_HOST_NAME)
          echo "::add-mask::$FIREBASE_HOST_NAME"
          echo FIREBASE_HOST_NAME=$FIREBASE_HOST_NAME >> $GITHUB_ENV

          WORKLOAD_IDENTIFY_POOLS_PROVIDER=$(op read -n op://CD/${{ env.ENVIRONMENT }}/bcregistry/WORKLOAD_IDENTIFY_POOLS_PROVIDER)
          echo "::add-mask::$WORKLOAD_IDENTIFY_POOLS_PROVIDER"
          echo WORKLOAD_IDENTIFY_POOLS_PROVIDER=$WORKLOAD_IDENTIFY_POOLS_PROVIDER >> $GITHUB_ENV

          GCP_SERVICE_ACCOUNT=$(op read -n op://CD/${{ env.ENVIRONMENT }}/bcregistry/GCP_SERVICE_ACCOUNT)
          echo "::add-mask::$GCP_SERVICE_ACCOUNT"
          echo GCP_SERVICE_ACCOUNT=$GCP_SERVICE_ACCOUNT >> $GITHUB_ENV

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTIFY_POOLS_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}

      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      # Bump version and push tag
      - name: Set git tag format - datetime.short-sha
        id: customtag
        run: echo "tag=`date +'%Y%m%d%H%M'`.${LAST_COMMIT_SHA:0:7}" >> $GITHUB_OUTPUT

      - name: Add git tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.customtag.outputs.tag }}
          tag_prefix: ${{ env.ENVIRONMENT }}.

      - name: Job summary
        if: always()
        run: |
          echo "# Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- From Branch: ${{ github.ref_name }} Tag: ${{ inputs.tagname }}" >> $GITHUB_STEP_SUMMARY
          echo "- Date: $(date +"%Y-%m-%d %H:%M")" >> $GITHUB_STEP_SUMMARY
          echo "- Environment: ${{ env.ENVIRONMENT }}" >> $GITHUB_STEP_SUMMARY
          echo "- Package Version: ${{ steps.package-version.outputs.current-version}}" >> $GITHUB_STEP_SUMMARY
